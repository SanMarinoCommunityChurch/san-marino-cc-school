---
import { urlFor } from "@lib/sanity";
import ImageOpt from "./ImageOpt.astro";
const { content } = Astro.props;

let showHeadingSection = false;
if (content.heading) {
  showHeadingSection = true;
} else if (content.text) {
  showHeadingSection = true;
}
---

<div
  class="p-16 rounded-lg bg-gradient-to-r from-brand-light/10 to-brand-light/40"
>
  {
    showHeadingSection && (
      <div class="center-items mb-12">
        {content.heading && (
          <h2 class="text-4xl mb-6" id="slider-heading">
            {content.heading}
          </h2>
        )}
        {content.text && (
          <p class="text-2xl leading-normal max-w-3xl">{content.text}</p>
        )}
      </div>
    )
  }
  <section>
    <div class="splide" id="main-slider" aria-labelledby="slider-heading">
      <div class="splide__arrows"></div>
      <div class="splide__track -mx-16">
        <ul class="splide__list">
          {
            content.entries.map((slide) => {
              return (
                <li class="splide__slide rounded-md">
                  <ImageOpt
                    class="w-full h-auto rounded-md | bg-center bg-no-repeat bg-cover"
                    src={urlFor(slide)
                      .width(1200)
                      .height(800)
                      .auto("format")
                      .url()}
                    alt={slide.asset.altText || ""}
                    style={`background-image: url(${slide.asset.metadata.lqip})`}
                  />
                </li>
              );
            })
          }
        </ul>
      </div>
    </div>
    <div class="hidden md:block splide mt-4" id="thumbnail-slider">
      <div class="splide__track">
        <ul class="splide__list">
          {
            content.entries.map((slide) => {
              return (
                <li class="splide__slide rounded-sm">
                  <ImageOpt
                    class="rounded-sm | bg-center bg-no-repeat bg-cover"
                    src={urlFor(slide)
                      .width(300)
                      .height(225)
                      .auto("format")
                      .url()}
                    style={`background-image: url(${slide.asset.metadata.lqip})`}
                    alt={slide.asset.altText || ""}
                  />
                </li>
              );
            })
          }
        </ul>
      </div>
    </div>
  </section>
</div>

<script>
  import Splide from "@splidejs/splide";
  import "@splidejs/splide/css";

  // check for slider element first to prevent console errors
  const mainSlider = document.querySelector("#main-slider");

  if (mainSlider) {
    const slider = new Splide("#main-slider", {
      type: "loop",
      gap: "2rem",
      padding: "15%",
      breakpoints: {
        768: {
          gap: "1rem",
          padding: "10%"
        }
      }
    });

    const thumbnailSlider = new Splide("#thumbnail-slider", {
      rewind: true,
      isNavigation: true,
      gap: "0.5rem",
      focus: "center",
      pagination: false,
      fixedWidth: 100,
    });

    slider.sync(thumbnailSlider);
    slider.mount();
    thumbnailSlider.mount();
    }
</script>
